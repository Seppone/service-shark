name: Build and Test

on:
  push:
  pull_request:
  
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Check out code
        uses: actions/checkout@v1

      - name: Install golangci-lint
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint

      - name: Run linters
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin  # temporary fix. See https://github.com/actions/setup-go/issues/14
          golangci-lint -E bodyclose,misspell,gocyclo,dupl,gofmt,golint,unconvert,goimports,depguard,gocritic,funlen,interfacer run

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Check out code
        uses: actions/checkout@v1

      - name: Run Unit tests.
        run: go test -v ./...

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Check out code
        uses: actions/checkout@v1

      - name: Run coverage
        run: go test -v -covermode=count -coverprofile coverage.out ./...

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.out

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.13.x
    - name: Checkout code
      uses: actions/checkout@v1
    - name: build
      run: |
        export GO111MODULE=on
        GOOS=windows GOARCH=amd64 go build -o bin/ci-test-windows-amd64.exe
        GOOS=linux   GOARCH=amd64 go build -o bin/ci-test-linux-amd64
    - name: upload artifacts
      uses: actions/upload-artifact@master
      with:
        name: binaries
        path: bin/
